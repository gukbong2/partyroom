<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.mapper.BoardMapper">

<select id="getList" resultType="com.spring.domain.BoardVO" >
	<![CDATA[
		SELECT * FROM BOARD WHERE BNO > 0 ORDER BY BNO DESC
	]]>
</select>

<insert id="insert">
	INSERT INTO BOARD(BNO, TITLE, CONTENT, WRITER) 
		VALUES (SEQ_BOARD.NEXTVAL, #{title}, #{content}, #{writer})
</insert>


<insert id="insertSelectKey">

<selectKey keyProperty="bno" order="BEFORE" resultType="long">
	SELECT SEQ_BOARD.NEXTVAL FROM DUAL
</selectKey>
	
	<!-- SELECT SEQ_BOARD.NEXTVAL FROM DUAL 쿼리가 먼저 실행 후, 결과를 이용해서 bno값 처리 -->

	INSERT INTO BOARD(BNO, TITLE, CONTENT, WRITER) 
		VALUES (SEQ_BOARD.NEXTVAL, #{title}, #{content}, #{writer})	
</insert>

<select id="read" resultType="com.spring.domain.BoardVO">
	SELECT * FROM BOARD WHERE BNO = #{bno}
</select>

<delete id="delete">
	DELETE BOARD WHERE BNO = #{bno}
</delete>

<update id="update">
	UPDATE BOARD SET TITLE = #{title}, CONTENT = #{content}, WRITER = #{writer}, UPDATEDATE = SYSDATE
		WHERE BNO = #{bno}

</update>

<select id="getListWithPaging" resultType="com.spring.domain.BoardVO">
<![CDATA[
  SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE, REPLYCNT FROM 
      
      (
      SELECT /*+INDEX_DESC(BOARD PK_BOARD) */
        ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE, REPLYCNT
      FROM BOARD WHERE 
]]>

<include refid="criteria"></include>
		
<![CDATA[    
      ROWNUM <= #{pageNum} * #{amount}
      )
      
	 WHERE RN > (#{pageNum} -1) * #{amount}   
]]>
</select>

 <select id="getTotalCount" resultType="int">
 	SELECT COUNT(*) FROM BOARD WHERE
<include refid="criteria"></include>
	 BNO > 0  
 </select>

<update id="updateReplyCnt">
	UPDATE BOARD SET REPLYCNT = REPLYCNT + #{amount} 
		WHERE BNO = #{bno}
</update>













<sql id="criteria">
	<trim prefix="(" suffix=") AND " prefixOverrides="OR">
		<foreach item='type' collection="typeArr">
			<trim prefix="OR">
				<choose>
					<when test="type == 'T'.toString()">
						title like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'C'.toString()">
						content like '%'||#{keyword}||'%'
					</when>
					<when test="type == 'W'.toString()">
						writer like '%'||#{keyword}||'%'
					</when>
				</choose>
			</trim>
		</foreach>
	</trim>
</sql>


</mapper>